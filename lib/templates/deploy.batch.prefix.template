@if "%SCM_TRACE_LEVEL%" NEQ "4" @echo off

:: ----------------------
:: KUDU Deployment Script
:: Version: {Version}
:: ----------------------

:: Prerequisites
:: -------------

:: Verify node.js installed
where node 2>nul >nul
IF %ERRORLEVEL% NEQ 0 (
  echo Missing node.js executable, please install node.js, if already installed make sure it can be reached from current environment.
  goto error
)

:: Setup
:: -----

setlocal enabledelayedexpansion

SET ARTIFACTS=%~dp0%..\artifacts
:: select msbuild version
IF NOT DEFINED MSBUILD_VERSION GOTO useMsbuild15
IF %MSBUILD_VERSION% == "15" GOTO useMsbuild15
IF %MSBUILD_VERSION% == "14" GOTO useMsbuild14
:: defined an invalid version
GOTO error

:useMsbuild15
SET MSBUILD_DIR=%MSBUILD_15_DIR%
GOTO nugetRestore

:useMsbuild14
SET MSBUILD_DIR=%MSBUILD_14_DIR%
GOTO nugetRestore

:nugetRestore
SET NUGETRESTORE=nuget restore -NonInteractive -MSBuildPath "%MSBUILD_DIR%"

IF NOT DEFINED DEPLOYMENT_SOURCE (
  SET DEPLOYMENT_SOURCE=%~dp0%.
)

IF NOT DEFINED DEPLOYMENT_TARGET (
  SET DEPLOYMENT_TARGET=%ARTIFACTS%\wwwroot
)

IF NOT DEFINED NEXT_MANIFEST_PATH (
  SET NEXT_MANIFEST_PATH=%ARTIFACTS%\manifest

  IF NOT DEFINED PREVIOUS_MANIFEST_PATH (
    SET PREVIOUS_MANIFEST_PATH=%ARTIFACTS%\manifest
  )
)

IF NOT DEFINED KUDU_SYNC_CMD (
  :: Install kudu sync
  echo Installing Kudu Sync
  call npm install kudusync -g --silent
  IF !ERRORLEVEL! NEQ 0 goto error

  :: Locally just running "kuduSync" would also work
  SET KUDU_SYNC_CMD=%appdata%\npm\kuduSync.cmd
)
